OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader dispHandle
oparam	float	resultD	0		%read{2147483647,-1} %write{27,27}
global	float	u	%read{1,24} %write{2147483647,-1}
global	float	v	%read{7,25} %write{2147483647,-1}
local	float	fuzz	%read{20,21} %write{0,0}
local	float	s	%read{14,14} %write{6,6}
local	float	t	%read{14,14} %write{12,12}
local	point	centre	%read{15,15} %write{13,13}
local	point	here	%read{15,15} %write{14,14}
local	float	dist	%read{22,22} %write{15,15}
local	float	radius	%read{20,21} %write{19,19}
local	float	inDisk	%read{2147483647,-1} %write{23,23}
const	float	$const1	0.1		%read{0,17} %write{2147483647,-1}
temp	float	$tmp1	%read{3,6} %write{1,1}
const	float	$const3	8		%read{1,1} %write{2147483647,-1}
const	float	$const5	1		%read{3,23} %write{2147483647,-1}
const	string	$const6	"mod"		%read{2,8} %write{2147483647,-1}
temp	float	$tmp2	%read{5,5} %write{4,4}
temp	float	$tmp3	%read{4,4} %write{3,3}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	float	$tmp5	%read{9,12} %write{7,7}
const	float	$const8	4		%read{7,7} %write{2147483647,-1}
temp	float	$tmp6	%read{11,11} %write{10,10}
temp	float	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{12,12} %write{11,11}
const	point	$const9	0.5 0.5 0		%read{13,13} %write{2147483647,-1}
const	float	$const11	0		%read{14,14} %write{2147483647,-1}
temp	float	$tmp9	%read{19,19} %write{18,18}
const	string	$const12	"cell"		%read{18,18} %write{2147483647,-1}
temp	float	$tmp10	%read{18,18} %write{16,16}
temp	float	$tmp11	%read{18,18} %write{17,17}
const	float	$const13	0.40000001		%read{19,19} %write{2147483647,-1}
temp	float	$tmp12	%read{23,23} %write{22,22}
temp	float	$tmp13	%read{22,22} %write{20,20}
temp	float	$tmp14	%read{22,22} %write{21,21}
temp	float	$tmp15	%read{27,27} %write{26,26}
const	string	$const14	"perlin"		%read{26,26} %write{2147483647,-1}
temp	float	$tmp16	%read{26,26} %write{24,24}
const	float	$const16	100		%read{24,24} %write{2147483647,-1}
temp	float	$tmp17	%read{26,26} %write{25,25}
const	float	$const18	50		%read{25,25} %write{2147483647,-1}
const	float	$const19	0.30000001		%read{27,27} %write{2147483647,-1}
code ___main___
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:6
#     float s=mod(8*u,1);
	assign		fuzz $const1 	%filename{"C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl"} %line{6} %argrw{"wr"}
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:7
#     float t=mod(4*v,1);
	mul		$tmp1 $const3 u 	%line{7} %argrw{"wrr"}
	functioncall	$const6 7 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# vector mod (vector a, vector b) { return a - b*floor(a/b); }
	div		$tmp3 $tmp1 $const5 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $const5 $tmp2 	%argrw{"wrr"}
	sub		s $tmp1 $tmp4 	%argrw{"wrr"}
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:8
#     point centre=point (0.5,0.5,0);
	mul		$tmp5 $const8 v 	%filename{"C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl"} %line{8} %argrw{"wrr"}
	functioncall	$const6 13 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# point  mod (point  a, point  b) { return a - b*floor(a/b); }
	div		$tmp7 $tmp5 $const5 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const5 $tmp6 	%argrw{"wrr"}
	sub		t $tmp5 $tmp8 	%argrw{"wrr"}
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:9
#     point here=point (s,t,0);
	assign		centre $const9 	%filename{"C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl"} %line{9} %argrw{"wr"}
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:10
#     float dist=distance(centre,here);
	point		here s t $const11 	%line{10} %argrw{"wrrr"}
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:11
#     float radius=(float) noise("cell",0.1*u,0.1*v)*0.4;
	distance	dist centre here 	%line{11} %argrw{"wrr"}
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:12
#     float inDisk=1-smoothstep(radius-fuzz,radius+fuzz,dist);
	mul		$tmp10 $const1 u 	%line{12} %argrw{"wrr"}
	mul		$tmp11 $const1 v 	%argrw{"wrr"}
	noise		$tmp9 $const12 $tmp10 $tmp11 	%argrw{"wrrr"}
	mul		radius $tmp9 $const13 	%argrw{"wrr"}
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:13
# 
	sub		$tmp13 radius fuzz 	%line{13} %argrw{"wrr"}
	add		$tmp14 radius fuzz 	%argrw{"wrr"}
	smoothstep	$tmp12 $tmp13 $tmp14 dist 	%argrw{"wrrr"}
	sub		inDisk $const5 $tmp12 	%argrw{"wrr"}
# C:\\Users\\alexk\\github\\Renderman_assignment\\Shaders\\dispHandle.osl:16
# }
	mul		$tmp16 u $const16 	%line{16} %argrw{"wrr"}
	mul		$tmp17 v $const18 	%argrw{"wrr"}
	noise		$tmp15 $const14 $tmp16 $tmp17 	%argrw{"wrrr"}
	mul		resultD $tmp15 $const19 	%argrw{"wrr"}
	end
