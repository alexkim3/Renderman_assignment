shader dispDots (
output	float resultD=0
)
{
    float fuzz=0.1;
    float s=mod(8*u,1);
    float t=mod(4*v,1);
    point centre=point (0.5,0.5,0);
    point here=point (s,t,0);
    float dist=distance(centre,here);
    float radius=(float) noise("cell",0.1*u,0.1*v)*0.4;
    float inDisk=1-smoothstep(radius-fuzz,radius+fuzz,dist);


    resultD=noise("perlin",P*50)*0.3;

    float fuzz2=0.025; //borders
    float dist2;
    float inDisk2;

    float s2=mod(u*4.8,1);
    float t2=mod(v*2.4,1);
    point here2=point (s2,t2,0);
    point centre2=point (0.2,0.2,0);
    
    dist2=distance(centre2,here2);
    inDisk2=1-smoothstep(0.07-fuzz2,0.07+fuzz2,dist2); //disk radius
    resultD+=inDisk2;

    centre2=point (0.7,0.7,0);
    dist2=distance(centre2,here2);
    inDisk2=1-smoothstep(0.07-fuzz2,0.07+fuzz2,dist2); //disk radius
    resultD+=inDisk2;


}

